1 := global #0
2 := global #0
3 := global #0
4 := global #0
5 := global #0
6 := loadparam 0
7 := loadparam 1
8 := loadparam 2
9 := loadparam 3
10 := div (9) #2
11 := mul (10) #2
12 := sub (9) (11)
13 := mul #4
14 := add FP rulebin_baseaddr
15 := adda (13) (14)
16 := mul #4
17 := mul (16) #2
18 := adda (17) (15)
19 := mul #4
20 := mul (19) #4
21 := adda (20) (18)
22 := store (21) (12)
23 := mul #4
24 := add FP rulebin_baseaddr
25 := adda (23) (24)
26 := mul #4
27 := mul (26) #2
28 := adda (27) (25)
29 := mul #4
30 := mul (29) #4
31 := adda (30) (28)
32 := load (31)
33 := write (32)
34 := div (9) #2
35 := return (34)
36 := add #0 #0
37 := func setnextbit #0 #0 #0 (5)
38 := func setnextbit #0 #0 #1 (37)
39 := func setnextbit #0 #1 #0 (38)
40 := func setnextbit #0 #1 #1 (39)
41 := func setnextbit #1 #0 #0 (40)
42 := func setnextbit #1 #0 #1 (41)
43 := func setnextbit #1 #1 #0 (42)
44 := func setnextbit #1 #1 #1 (43)
45 := return
46 := add #0 #0
47 := add #0 #0
48 := phi({output=i, cleardata=i}) #0 (57)
49 := phi({calcnext=data, if4=data, else5=data, if2=data, while1=data, output=data, else3=data, cleardata=data}) (1) (56)
50 := add (3) #2
51 := cmp (48) (50)
52 := bge (51) #7
53 := mul #4 (48)
54 := add FP data_baseaddr
55 := adda
56 := store (55) #0
57 := add (48) #1
58 := beq #0 #-10
59 := return
60 := add #0 #0
61 := phi({calcnext=i, output=i}) #1 (81)
62 := cmp (61) (3)
63 := bgt (62) #20
64 := mul #4 (61)
65 := add FP data_baseaddr
66 := adda
67 := load (66)
68 := cmp (67) #0
69 := bne (68) #3
70 := write #1
71 := beq #0 #10
72 := mul #4 (61)
73 := add FP data_baseaddr
74 := adda (72)
75 := load (74)
76 := cmp (75) #1
77 := bne (76) #3
78 := write #8
79 := beq #0 #2
80 := write #0
81 := add (61) #1
82 := beq #0 #-21
83 := wln
84 := return
85 := add #0 #0
86 := add #0 #0
87 := add #0 #0
88 := add #0 #0
89 := add #0 #0
90 := mul #4 #1
91 := add FP data_baseaddr
92 := adda (90) (91)
93 := load (92)
94 := mul #4 #0
95 := add FP data_baseaddr
96 := adda (94) (95)
97 := store (96) (93)
98 := add (3) #1
99 := mul #4 (3)
100 := add FP data_baseaddr
101 := adda (99) (100)
102 := load (101)
103 := mul #4 (98)
104 := add FP data_baseaddr
105 := adda (103) (104)
106 := store (105) (102)
107 := mul #4 #0
108 := add FP data_baseaddr
109 := adda
110 := load (109)
111 := mul #4 #1
112 := add FP data_baseaddr
113 := adda
114 := load (113)
115 := add #0 #1
116 := phi({calcnext=i, run=i}) #1 (143)
117 := phi({calcnext=data, while7=data, run=data}) (106) (142)
118 := phi({calcnext=next, while7=next, run=next}) (89) (128)
119 := phi({calcnext=akt, while7=akt, run=akt}) (114) (128)
120 := phi({calcnext=last, while7=last, run=last}) (110) (114)
121 := phi({calcnext=j, while7=j, run=j}) (86) (125)
122 := cmp (116) (3)
123 := bgt (122) #22
124 := mul #4 (125)
125 := add (116) #1
126 := add FP data_baseaddr
127 := adda
128 := load (127)
129 := mul #4 (128)
130 := add FP rulebin_baseaddr
131 := adda
132 := mul #4 (119)
133 := mul
134 := adda
135 := mul #4 (120)
136 := mul
137 := adda
138 := load (137)
139 := mul #4 (116)
140 := add FP data_baseaddr
141 := adda
142 := store (141) (138)
143 := add (116) #1
144 := beq #0 #-28
145 := return
146 := add #0 #0
147 := phi({run=i}) #0 (152)
148 := cmp (147) (4)
149 := bge (148) #5
150 := proc output
151 := proc calcnext
152 := add (147) #1
153 := beq #0 #-6
154 := return
155 := write #22
156 := write #80
157 := write #60
158 := proc cleardata
159 := mul #4 #40
160 := add FP data_baseaddr
161 := adda (159) (160)
162 := store (161) #1
163 := mul #4 #40
164 := add FP data_baseaddr
165 := adda (163) (164)
166 := load (165)
167 := write (166)
168 := wln
169 := proc initrulebin
170 := wln
171 := proc run
172 := end

